kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
containerdConfigPatches:
- |-
  [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]
    endpoint = ["https://tzkiu70c.mirror.aliyuncs.com","https://registry-1.docker.io"]
networking:
  apiServerAddress: 0.0.0.0
nodes:
- role: control-plane
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "role=master"
- role: worker
  kubeadmConfigPatches:
  - |
    kind: JoinConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "role=work1,ingress-ready=true"
  extraPortMappings:
  - containerPort: 80
    hostPort: 80
    protocol: TCP
  - containerPort: 443
    hostPort: 8443
    protocol: TCP
  - containerPort: 30000
    hostPort: 30000
    protocol: TCP
  extraMounts:
  - hostPath: data/work1
    containerPath: /var/local-path-provisioner
- role: worker
  kubeadmConfigPatches:
  - |
    kind: JoinConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "role=work2"
  extraMounts:
  - hostPath: data/work2
    containerPath: /var/local-path-provisioner
  extraPortMappings:
  - containerPort: 30000
    hostPort: 30001
    protocol: TCP
- role: worker
  kubeadmConfigPatches:
  - |
    kind: JoinConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "role=work3"
  extraMounts:
  - hostPath: data/work3
    containerPath: /var/local-path-provisioner
  extraPortMappings:
  - containerPort: 30000
    hostPort: 30002
    protocol: TCP
